%header.entry-header
  %h1.entry-title
    %a{:href => "http://unixsuperhero.com/2012/10/12/ruby-quicktip-notation-for-regular-expressions/", :rel => "bookmark"} Ruby Quicktip: % Notation for Regular&nbsp;Expressions
  .comments-link
    %a{:href => "http://unixsuperhero.com/2012/10/12/ruby-quicktip-notation-for-regular-expressions/#respond", :title => "Comment on Ruby Quicktip: % Notation for Regular&nbsp;Expressions"}
      %span.leave-reply Leave a reply
  / .comments-link
/ .entry-header
.entry-content
  %p
    I recently ran into a situation where I was removing “
    %a{:href => "http://&amp;#8221", :rel => "nofollow"}> http://&amp;#8221
    ; and “
    %a{:href => "https://&amp;#8221", :rel => "nofollow"}> https://&amp;#8221
    ; from links.  If I used the classic “/” to delimit the regex, it looks like this:
  %pre /https?:\/\//i
  %p
    Escaping the slashes just isn’t cute.  Is it?  To avoid escaping the two slashes, I used a dot, like I mentioned in a
    = succeed ":" do
      %a{:href => "http://unixsuperhero.wordpress.com/2012/10/06/regex-quicktip-1-using-dot-properly/"} previous tip
  %pre /https?:../i
  %p However, yesterday learned that you can escape a regex with %r{}, like so:
  %pre %r{https?://}i
  %p
    The first method is accurate, but not clean.  The second method is clean, but not accurate.  But. the third method is both clean
    %strong and
    accurate.
  %pre
    :preserve
      link.sub(/https?:\/\//i, '')    # 1st method
      link.sub(/https?:../i, '')      # 2nd method
      link.sub(%r{https?://}i, '')    # 3rd method  #jp-post-flair.sharedaddy.sd-like-enabled.sd-sharing-enabled
/ .entry-content
%footer.entry-meta
  This entry was posted in
  %a{:href => "http://unixsuperhero.com/category/uncategorized/", :rel => "category tag", :title => "View all posts in Uncategorized"} Uncategorized
  and tagged
  = succeed "," do
    %a{:href => "http://unixsuperhero.com/tag/percent-notation/", :rel => "tag"} percent notation
  = succeed "," do
    %a{:href => "http://unixsuperhero.com/tag/regex/", :rel => "tag"} regex
  %a{:href => "http://unixsuperhero.com/tag/ruby/", :rel => "tag"} ruby
  on
  %a{:href => "http://unixsuperhero.com/2012/10/12/ruby-quicktip-notation-for-regular-expressions/", :rel => "bookmark", :title => "1:37 am"}
    %time.entry-date{:datetime => "2012-10-12T01:37:23+00:00"} October 12, 2012
  = succeed "." do
    %span.by-author
      by
      %span.author.vcard
        %a.url.fn.n{:href => "http://unixsuperhero.com/author/unixsuperhero/", :rel => "author", :title => "View all posts by unixsuperhero"} unixsuperhero
  %span.edit-link
    %a.post-edit-link{:href => "http://unixsuperhero.wordpress.com/wp-admin/post.php?post=50&amp;action=edit", :title => "Edit Post"} Edit
/ .entry-meta
