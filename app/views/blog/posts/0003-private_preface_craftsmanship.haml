%header.entry-header
  %h1.entry-title
    %a{:href => "http://unixsuperhero.com/2012/10/04/preface-craftsmanship/", :rel => "bookmark"} Private: Preface:&nbsp;Craftsmanship
  .comments-link
    %a{:href => "http://unixsuperhero.com/2012/10/04/preface-craftsmanship/#respond", :title => "Comment on Private: Preface:&nbsp;Craftsmanship"}
      %span.leave-reply Leave a reply
  / .comments-link
/ .entry-header
.entry-content
  %h3{:style => "text-align:center;"} Preface
  %p First of all, I would like to make note of why this post is labeled: “Preface”. &nbsp;In Book Design, the Preface is a part of “Front matter”. &nbsp;It often tells a story about the book, setting the tone. &nbsp;That being said, I hope there are other developers out there who strive to be masters of their craft, and these logs help along the way.
  %p Master Craftsman: A Developer’s Aspiration
  %p
    [ Intro ]
    %br/
    Programming is my craft. The same way carpentry is for wood
    %br/
    workers. I eat, sleep, and breathe software. When I see
    %br/
    software someone else made, I wonder how it works. I
    %br/
    critique it. Whether it is your own work, or someone else’s,
    %br/
    I believe these two actions are what make a good craftsman.
  %p
    [ Tools ]
    %br/
    Craftsmen use tools. It is important to know your tools.
    %br/
    Which tasks a tool is best suited for. When to use a tool,
    %br/
    and when not to. Someone who is truely skilled, uses their
    %br/
    tools as an extention of themselves. Like a samurai and his
    %br/
    sword.
    %br/
    The main tools that I use are:
    %br/
    \- unix shell
    %br/
    \- vim
    %br/
    \- a web browser
    %br/
    For years I have studied bash and vim, all while using a web
    %br/
    browser. Countless hours have been spent reading man pages
    %br/
    and the vim help docs, and rewriting the information in my own
    %br/
    words. These are two of the most powerful resources available
    %br/
    to you. Unlike the internet, these resources are usually free
    %br/
    from the public’s opinion. However, of course, the internet
    %br/
    is still another powerful source of information.
  %p
    [ Humility ]
    %br/
    It is important to accept when you are wrong. Understanding
    %br/
    why and learning from the experience is one of the quickest
    %br/
    ways to learn. The feeling of humiliation has a profound
    %br/
    effect on what information stands out in your memory. It may
    %br/
    sting at first, but the quicker you can get past it, the
    %br/
    better off you will be.
  %p
    [ Practice ]
    %br/
    A master is someone who never stops practicing. Everything
    %br/
    produced provides another learning experience. The subtle
    %br/
    difference in the angle of a blade, and the effect it had on a
    %br/
    block on wood. Aspect that seem insignificant, like the
    %br/
    amount of pressure applied when kneading dough, are all
    %br/
    variables that can affect the outcome.
  %p
    [ Trying different things ]
    %br/
    What goes hand-in-hand with practice, is trying new things.
    %br/
    Not being afraid to try something new, is an important
    %br/
    quality. If it fails, chances are, you won’t die. Whether it
    %br/
    fails or succeeds, I’m sure you will have learned something
    %br/
    new. Be it, something never to do again, a great technique
    %br/
    that works, or maybe it leads to more questions and more
    %br/
    things to try. Everything contributes to your success.
  %p
    [ trash ]
    %br/
    Craftwork is something you do by hand, as a human. We are
    %br/
    collections of information. It is important to understand
    %br/
    that other programmers know things that you do not. To
    %br/
    meet another developer is an opportunity to ask him/her
    %br/
    questions, and pick her brain.
  %h3 Master Craftsman: A Developer’s Aspiration
  %p
    %strong Outline
  %ul
    %li Know your tools, and know them well. so much, that you can use them in unconventional ways. (eg. A chef and ingredients.)
    %li Keep useful parts, ignore/forget useless parts. This might lead you to think, forget everything that doesn’t work. But, some broken things are worth remembering. Which is why some people document anti-patterns. It helps to avoid methods that are known to break or lead to dead-ends. (Usefulness doesn’t necessarily mean good. Some bugs and issues are useful to remember.) (this may be an obvious point, aka useless, so discard it)
    %li Know your own habits and limitations. (Muscle memory, maybe.) By knowing what you are prone to do, you can change your workflow to accomodate habits and leverage them.
    %li One who is not afraid to be wrong. &nbsp;Basically, everyone makes mistakes or poor design decisions. &nbsp;Those who understand this, and take constructive criticism well, are more likely to grow. &nbsp;I’m always looking for a better way. &nbsp;If I see someone do something I haven’t seen before; or something cooler/faster than the way I would do it, I’m quick to ask how or why.
    %li using your time wisely. Don’t get stuck on newb issues. I had a better idea of what this meant earlier.
    %li practice. For me, this (vaguely) goes hand-in-hand with fear of failure. If I can avoid it, I don’t like to look bad in front of people. That sounds worse than it is. Rather, if I can help it, I like to appear skilled in front if people. And this has always driven me to practice in my own time. I was trying to think of how we could practice programming. Because, it’s not fun to practice drilling, nor practical, coming up with all sorts of ideas. Then I realized that debugging is practice. A very good form of practice. It helps concepts stick because you figure them out for yourself.
  #jp-post-flair.sharedaddy.sd-like-enabled.sd-sharing-enabled
/ .entry-content
%footer.entry-meta
  This entry was posted in
  %a{:href => "http://unixsuperhero.com/category/uncategorized/", :rel => "category tag", :title => "View all posts in Uncategorized"} Uncategorized
  on
  %a{:href => "http://unixsuperhero.com/2012/10/04/preface-craftsmanship/", :rel => "bookmark", :title => "5:54 pm"}
    %time.entry-date{:datetime => "2012-10-04T17:54:49+00:00"} October 4, 2012
  = succeed "." do
    %span.by-author
      by
      %span.author.vcard
        %a.url.fn.n{:href => "http://unixsuperhero.com/author/unixsuperhero/", :rel => "author", :title => "View all posts by unixsuperhero"} unixsuperhero
  %span.edit-link
    %a.post-edit-link{:href => "http://unixsuperhero.wordpress.com/wp-admin/post.php?post=11&amp;action=edit", :title => "Edit Post"} Edit
/ .entry-meta
