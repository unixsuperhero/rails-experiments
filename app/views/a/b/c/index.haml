.alert.alert-success You made it!
.alert.alert-danger It's not working when passing an action...fuck.

%h1 Nested Controller Route Test
%hr

%h3 Why This is Awesome
%p
  The fact that this was successful, makes this test awesome.

%p
  It has a lot of implications.  Specifically, how I can
  %ul
    %li setup 2 routes per &quot;section&quot; (A list of sections: experiments, refactoring patterns)
    %li
      %b UPDATE: setup 2 routes for all automated sections
      %p (i think it has to be this way...this route should be after all specific routes)
    %li
      %b UPDATE: (might not need to be after everything)
    %li drive each section completely (almost) thru views
    %li
      if a subsection's controller requires code:
      %ul
        %li make a nested controller containing only related code
        %li no need to update routes

%h3 The Code
%hr
%h4 Routes
.inline
  %em config/routes.rb
  %strong v1
  %pre
    :escaped
      # exp: nested controller route test

      get '/routes/*controller(/:action)'
      get '/routes/*controller/:action'
  %p The problem is, the 1st route's function isn't obvious.

.inline
  %em config/routes.rb
  %strong v2
  %pre
    :escaped
      # exp: nested controller route test

      get '/routes/*controller', action: :index
      get '/routes/*controller/:action'
  %p The 1st route tells you, I'm assuming the action is index, everything else is the controller.

%hr

%h4 Controller
%em app/controllers/a/b/c_controller.rb
%pre= IO.read('./app/controllers/a/b/c_controller.rb')

%hr

%h4 View
%em app/views/a/b/c/index.haml
%pre You made it!
